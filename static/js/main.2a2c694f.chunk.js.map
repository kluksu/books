{"version":3,"sources":["logo.svg","components/Utils.js","components/Card.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["a","URL","fetch","method","mode","cache","credentials","headers","accept","redirect","referrerPolicy","response","json","Card","className","this","props","title","src","picture","description","Component","Home","searchForBooks","setState","errorText","getData","state","searchText","then","res","console","log","booksList","items","undefined","totalItems","error","handleChange","event","target","name","value","cards","forEach","book","volumeInfo","imageLinks","thumbnail","push","onSubmit","e","preventDefault","type","onChange","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAe,I,4GCCR,0CAAAA,EAAA,6DAAuBC,EAAvB,+BAA6B,GAA7B,+BAAwC,GAAxC,gCACkBC,MAAMD,EAAK,CAChCE,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,oBAEVC,SAAU,SACVC,eAAgB,gBAXb,cACCC,EADD,yBAaEA,EAASC,QAbX,2C,mCCCcC,E,4JACnB,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBC,KAAKC,MAAMC,QAEnC,qBAAKC,IAAKH,KAAKC,MAAMG,UACrB,qBAAKL,UAAU,cAAf,SAA8BC,KAAKC,MAAMI,qB,GAPfC,aCGbC,E,kDACnB,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IAORO,eAAiB,WACf,EAAKC,SAAS,CAAEC,UAAW,KFdxB,WAAP,+BEeIC,CAAQ,iDAAD,OAC4C,EAAKC,MAAMC,WADvD,8BFhBS,4CEkBdC,MAAK,SAACC,GACNC,QAAQC,IAAIF,GACZ,EAAKN,SAAS,CAAES,UAAWH,EAAII,cACnBC,IAARL,GAAuC,GAAlBA,EAAIM,YAAmBN,EAAIO,QAClD,EAAKb,SAAS,CACZC,UAAW,oDAjBA,EAsBnBa,aAAe,SAACC,GACd,EAAKf,SAAL,eAAiBe,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,QAClDX,QAAQC,IAAI,EAAKL,MAAMC,aAtBvB,EAAKD,MAAQ,CACXC,WAAY,GACZK,UAAW,IAJI,E,0CAgCnB,WAAU,IAAD,OACHU,EAAQ,GAgBZ,YAf6BR,IAAzBpB,KAAKY,MAAMM,WACblB,KAAKY,MAAMM,UAAUW,SAAQ,SAACC,GAC5B,IAAI1B,EAAU0B,EAAKC,WAAWC,WAC1BF,EAAKC,WAAWC,WAAWC,UAC3B,GACJL,EAAMM,KACJ,cAAC,EAAD,CACEhC,MAAO4B,EAAKC,WAAW7B,MACvBG,YAAayB,EAAKC,WAAW1B,YAC7BD,QAASA,QAOf,gCACE,sBAAKL,UAAU,iBAAf,UACE,8CAEA,uBAAMoC,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAzB,UACE,uBACEC,KAAK,SACLC,SAAU,SAACf,GAAD,OAAW,EAAKD,aAAaC,IACvCzB,UAAU,YACV2B,KAAK,eAEP,wBAAQY,KAAK,SAASE,QAASxC,KAAKQ,eAApC,0BAKJ,qBAAKT,UAAU,mBACf,oBAAIA,UAAU,YAAd,SAA2BC,KAAKY,MAAMF,YAEtC,qBAAKX,UAAU,iBAAf,SAAiC6B,W,GAtEPtB,aCOnBmC,MARf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACC,cAAC,EAAD,OCKU2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2a2c694f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export let APIKey = \"AIzaSyBwi91E20zj7Lq2W1hsznTT46KQvspYHmc\";\r\nexport async function getData(URL = \"\", data = {}, token) {\r\n  const response = await fetch(URL, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      accept: \"application/json\",\r\n    },\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n  });\r\n  return response.json();\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Card extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"myCard\">\r\n        <div className=\"title\">{this.props.title}</div>\r\n\r\n        <img src={this.props.picture}></img>\r\n        <div className=\"description\">{this.props.description}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { APIKey, getData } from \"../components/Utils\";\r\nimport Card from \"../components/Card\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\",\r\n      booksList: [],\r\n    };\r\n  }\r\n\r\n  searchForBooks = () => {\r\n    this.setState({ errorText: \"\" });\r\n    getData(\r\n      `https://www.googleapis.com/books/v1/volumes?q=${this.state.searchText}&maxResults=10&key=${APIKey}`\r\n    ).then((res) => {\r\n      console.log(res);\r\n      this.setState({ booksList: res.items });\r\n      if (res === undefined || res.totalItems == 0 || res.error) {\r\n        this.setState({\r\n          errorText: \"no results where found, please search again\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    console.log(this.state.searchText);\r\n  };\r\n  //  componentDidUpdate(prevProps,prevState){\r\n  //      if(this.state.booksList!==prevState.booksList && (this.state.booksList===undefined || this.state.booksList.length==0)){\r\n  //         this.setState({errorText:\"no results where found, please search again\"})\r\n\r\n  //      }\r\n  //  }\r\n  render() {\r\n    let cards = [];\r\n    if (this.state.booksList !== undefined) {\r\n      this.state.booksList.forEach((book) => {\r\n        let picture = book.volumeInfo.imageLinks\r\n          ? book.volumeInfo.imageLinks.thumbnail\r\n          : \"\";\r\n        cards.push(\r\n          <Card\r\n            title={book.volumeInfo.title}\r\n            description={book.volumeInfo.description}\r\n            picture={picture}\r\n          ></Card>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"upperContainer\">\r\n          <h1>books Search</h1>\r\n\r\n          <form onSubmit={(e) => e.preventDefault()}>\r\n            <input\r\n              type=\"search\"\r\n              onChange={(event) => this.handleChange(event)}\r\n              className=\"searchBox\"\r\n              name=\"searchText\"\r\n            ></input>\r\n            <button type=\"button\" onClick={this.searchForBooks}>\r\n              search\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"cardsContainer\"></div>\r\n        <h1 className=\"errorText\">{this.state.errorText}</h1>\r\n\r\n        <div className=\"cardsContainer\">{cards}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}